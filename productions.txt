PROGRAM -> DECL_LIBRARIES class ID begin DECL_VARIABLES STATEMENTS end
DECL_LIBRARIES -> import ID_LIBRARY ; DECL_LIBRARIES
DECL_LIBRARIES -> ε
DECL_VARIABLES -> def VARIABLES as TYPE ; DECL_VARIABLES
DECL_VARIABLES -> ε
VARIABLES -> ID MORE_VARIABLES
MORE_VARIABLES -> , VARIABLES
MORE_VARIABLES -> ε
TYPE -> integer
TYPE -> float
TYPE -> char
TYPE -> string
TYPE -> boolean
STATEMENTS -> STATEMENT ; STATEMENTS
STATEMENTS -> ε
STATEMENT -> ASSIGNMENT
STATEMENT -> IF
STATEMENT -> WHILE
STATEMENT -> FOR
STATEMENT -> READ
STATEMENT -> WRITE
STATEMENT -> ENTER
ASSIGNMENT -> ID = EXPRESSION_0
EXPRESSION_0 -> EXPRESSION_1 DISJUNCTION
DISJUNCTION -> || EXPRESSION_0
DISJUNCTION -> ε
EXPRESSION_1 -> EXPRESSION_2 CONJUNCTION
CONJUNCTION -> && EXPRESSION_1
CONJUNCTION -> ε
EXPRESSION_2 -> NEGATION EXPRESSION_3
NEGATION -> !
NEGATION -> ε
EXPRESSION_3 -> EXPRESSION_4 COMPARISON
COMPARISON -> RELATIONAL_OPERATOR EXPRESSION_4
COMPARISON -> ε
RELATIONAL_OPERATOR -> ==
RELATIONAL_OPERATOR -> !=
RELATIONAL_OPERATOR -> <
RELATIONAL_OPERATOR -> <=
RELATIONAL_OPERATOR -> >
RELATIONAL_OPERATOR -> >=
EXPRESSION_4 -> ADDEND ADDITION
ADDITION -> + EXPRESSION_4
ADDITION -> - EXPRESSION_4
ADDITION -> ε
ADDEND -> FACTOR MULTIPLICATION
MULTIPLICATION -> * ADDEND
MULTIPLICATION -> / ADDEND
MULTIPLICATION -> % ADDEND
MULTIPLICATION -> ε
FACTOR -> ID
FACTOR -> CONST_INTEGER
FACTOR -> CONST_REAL
FACTOR -> CONST_REAL_SCI
FACTOR -> CONST_CHAR
FACTOR -> CONST_STRING
FACTOR -> ( EXPRESSION_0 )
IF -> if ( EXPRESSION_0 ) STATEMENTS ELSE endif
ELSE -> else STATEMENTS
ELSE -> ε
WHILE -> while ( EXPRESSION_0 ) STATEMENTS endwhile
FOR -> for ( ASSIGNMENT : EXPRESSION_0 ) STATEMENTS endfor
EXPRESSIONS -> EXPRESSION_0 MORE_EXPRESSIONS
MORE_EXPRESSIONS -> , EXPRESSIONS
MORE_EXPRESSIONS -> ε
READ -> read ( EXPRESSIONS )
WRITE -> write ( EXPRESSIONS )
ENTER -> enter